---- SCI Matches (72 in 13 files) ----
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCIRXINTC_ISR(void)     // SCI-C
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCITXINTC_ISR(void)     // SCI-C
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCIRXINTA_ISR(void)     // SCI-A
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCITXINTA_ISR(void)     // SCI-A
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCIRXINTB_ISR(void)     // SCI-B
DSP2833x_DefaultIsr.c (d:\work\tms320f28335\source):interrupt void SCITXINTB_ISR(void)     // SCI-B
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCIRXINTC_ISR(void);    // SCI-C
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCITXINTC_ISR(void);    // SCI-C
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCIRXINTA_ISR(void);    // SCI-A
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCITXINTA_ISR(void);    // SCI-A
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCIRXINTB_ISR(void);    // SCI-B
DSP2833x_DefaultIsr.h (d:\work\tms320f28335\include):interrupt void SCITXINTB_ISR(void);    // SCI-B
DSP2833x_Device.h (d:\work\tms320f28335\include):#include "DSP2833x_Sci.h"                // SCI Registers
DSP2833x_Headers_nonBIOS.cmd (d:\work\tms320f28335\cmd):   SCIA        : origin = 0x007050, length = 0x000010     /* SCI-A registers */
DSP2833x_Headers_nonBIOS.cmd (d:\work\tms320f28335\cmd):   SCIB        : origin = 0x007750, length = 0x000010     /* SCI-B registers */
DSP2833x_Headers_nonBIOS.cmd (d:\work\tms320f28335\cmd):   SCIC        : origin = 0x007770, length = 0x000010     /* SCI-C registers */
DSP2833x_I2C.c (d:\work\tms320f28335\source):// TITLE:	DSP2833x SCI Initialization & Support Functions.
DSP2833x_I2C.c (d:\work\tms320f28335\source):/* Configure SCI pins using GPIO regs*/
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCIRXINTC_ISR,   // 8.5  SCI-C
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCITXINTC_ISR,   // 8.6  SCI-C      
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCIRXINTA_ISR,   // 9.1 SCI-A
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCITXINTA_ISR,   // 9.2 SCI-A
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCIRXINTB_ISR,   // 9.3 SCI-B
DSP2833x_PieVect.c (d:\work\tms320f28335\source):      SCITXINTB_ISR,   // 9.4 SCI-B
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCIRXINTC;  // SCI-C
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCITXINTC;  // SCI-C
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCIRXINTA;  // SCI-A
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCITXINTA;  // SCI-A
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCIRXINTB;  // SCI-B
DSP2833x_PieVect.h (d:\work\tms320f28335\include):      PINT     SCITXINTB;  // SCI-B
DSP2833x_Sci.c (d:\work\tms320f28335\source):// TITLE:	DSP2833x SCI Initialization & Support Functions.
DSP2833x_Sci.c (d:\work\tms320f28335\source):// This function initializes the SCI(s) to a known state.
DSP2833x_Sci.c (d:\work\tms320f28335\source):	// Initialize SCI-A:
DSP2833x_Sci.c (d:\work\tms320f28335\source):	//SCI FIFO init
DSP2833x_Sci.c (d:\work\tms320f28335\source):	SciaRegs.SCIFFTX.bit.SCIRST = 1; 		// 15 	SCI reset rx/tx channels 
DSP2833x_Sci.c (d:\work\tms320f28335\source):	// SCI Control init
DSP2833x_Sci.c (d:\work\tms320f28335\source):	SciaRegs.SCICTL1.all =0x0023;  // Relinquish SCI from Reset
DSP2833x_Sci.c (d:\work\tms320f28335\source):	// Initialize SCI-B:
DSP2833x_Sci.c (d:\work\tms320f28335\source):      // Initialize SCI-C:
DSP2833x_Sci.c (d:\work\tms320f28335\source):// This function initializes GPIO pins to function as SCI pins
DSP2833x_Sci.c (d:\work\tms320f28335\source):/* Configure SCI-A pins using GPIO regs*/
DSP2833x_Sci.c (d:\work\tms320f28335\source):// This specifies which of the possible GPIO pins will be SCI functional pins.
DSP2833x_Sci.c (d:\work\tms320f28335\source):/* Configure SCI-B pins using GPIO regs*/
DSP2833x_Sci.c (d:\work\tms320f28335\source):// This specifies which of the possible GPIO pins will be SCI functional pins.
DSP2833x_Sci.c (d:\work\tms320f28335\source):/* Configure SCI-C pins using GPIO regs*/
DSP2833x_Sci.c (d:\work\tms320f28335\source):// This specifies which of the possible GPIO pins will be SCI functional pins.
DSP2833x_Sci.h (d:\work\tms320f28335\include):// TITLE:	DSP2833x Device SCI Register Definitions.
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI Individual Register Bit Definitions
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 RXENA:1;           // 0      SCI receiver enable
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 TXENA:1;           // 1      SCI transmitter enable
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 SLEEP:1;           // 2      SCI sleep  
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 SCIFFPE:1;         // 14     SCI PE error in FIFO mode
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 SCIFFFE:1;         // 15     SCI FE error in FIFO mode
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI FIFO Transmit register bit definitions:
DSP2833x_Sci.h (d:\work\tms320f28335\include):   Uint16 SCIRST:1;          // 15     SCI reset rx/tx channels 
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI FIFO recieve register bit definitions:
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI FIFO control register bit definitions:
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI Register File:
DSP2833x_Sci.h (d:\work\tms320f28335\include):// SCI External References & Function Declarations:
DSP2833x_SysCtrl.c (d:\work\tms320f28335\source):   SysCtrlRegs.PCLKCR0.bit.SCIAENCLK = 1;   // SCI-A
DSP2833x_SysCtrl.c (d:\work\tms320f28335\source):   SysCtrlRegs.PCLKCR0.bit.SCIBENCLK = 0;   // SCI-B
DSP2833x_SysCtrl.c (d:\work\tms320f28335\source):   SysCtrlRegs.PCLKCR0.bit.SCICENCLK = 0;   // SCI-C
DSP2833x_SysCtrl.h (d:\work\tms320f28335\include):   Uint16 SCICENCLK:1;   // 5     Enalbe low speed clk to SCI-C
DSP2833x_SysCtrl.h (d:\work\tms320f28335\include):   Uint16 SCIAENCLK:1;   // 10    Enable low speed clk to SCI-A
DSP2833x_SysCtrl.h (d:\work\tms320f28335\include):   Uint16 SCIBENCLK:1;   // 11    Enable low speed clk to SCI-B
Flash.c (d:\work\tms320f28335\flash):#define SCI		0
Flash.c (d:\work\tms320f28335\flash):	if(DownUserProgfrom(SCI)) 
Flash.c (d:\work\tms320f28335\flash):		if(Source == SCI)
Flash.c (d:\work\tms320f28335\flash):		if(Source == SCI)
Monitor_ctml.cmd (d:\work\tms320f28335\cmd):   SCIA        : origin = 0x007050, length = 0x000010     /* SCI-A registers */
Monitor_ctml.cmd (d:\work\tms320f28335\cmd):   SCIB        : origin = 0x007750, length = 0x000010     /* SCI-B registers */
Monitor_ctml.cmd (d:\work\tms320f28335\cmd):   SCIC        : origin = 0x007770, length = 0x000010     /* SCI-C registers */
